#!/bin/bash
#
# A git commit hook that rejects:
#  - perl linter failures
#  - js linter failures
#  - whitespace errors
#  - perl debug line errors
#
# Called by "git commit" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, copy/symlink to ".git/hooks/pre-commit".
# To enable this for new repos, pop it in ~/.gittemplates

## 'git diff --staged' - shows the difference between previous and staged commit
## 'git show :$file'   - shows the contents of staged file

set -e

FILES=`git diff --staged --name-only`
for file in $FILES
do
    # echo "Linting $file"
    ## If the file is a git rm, it won't exist any more
    if [ ! -f $file ]
    then
        echo "Skipping file that does not exist"
        continue
    fi

    if [ ${file: -3} == ".pm" ] || [ ${file: -3} == ".pl" ] || [ ${file: -2} == '.t' ]
    then
        ## File is perl, send to perl hook
        .git/hooks.d/pre-commit-perl $file
    elif [ ${file: -3} == ".js" ]
    then
        ## File is JS, send to JS hook
        .git/hooks.d/pre-commit-js $file
    fi
done

################################
## Check for whitespace errors
################################
if git rev-parse --verify -q HEAD > /dev/null
then
    exec git diff-index --check --cached HEAD --
fi
